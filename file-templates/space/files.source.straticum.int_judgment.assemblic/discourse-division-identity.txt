struct <<<DIVISION>>>
{
	#include nik_symbolic_typedef(patronum, natural, kernel, builtin, inductor)
	#include nik_assemblic_typedef(patronum, natural, kernel, judgment, <<<DIVISION>>>)

	// is equal:

		// symbolic:

		template
		<
			<<<TYPE>>> Value1, <<<TYPE>>> Value2,
			typename Continuation = ch_symbolic_values,
			template<typename> class Memoizer = dependent_memoization
		>
		using s_<<<MODULE>>>_is_equal = sf_judgment_is_equal
		<
			<<<TYPE>>>, Value1, Value2, Continuation, Memoizer
		>;

		// assemblic:

			// is not implemented as it's better to use constexpr functions.

		// procedural:

		static constexpr bool (*p_<<<MODULE>>>_is_equal)(<<<TYPE>>>, <<<TYPE>>>) =
			p_judgment_is_equal<<<<TYPE>>>>;
};
