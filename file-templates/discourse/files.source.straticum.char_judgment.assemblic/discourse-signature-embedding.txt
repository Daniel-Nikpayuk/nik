<<<DEFINE_DEPENDENCIES_TEXT>>>#ifdef safe_name

	#define PREFIX		<<<DIV_SIGNATURE>>>_

#else

	#define PREFIX

#endif

//

										  template
										  <
											<<<TYPE>>> Value,

											typename Continuation =
											typename pnk_builtin_ss::inductor::
											ch_s_match_to_value,

											typename Kind = <<<TYPE>>>,

											template<Kind...> class ListKind =
											pnk_builtin_ss::inductor::template
											dependent_memoization<Kind>::template
											pattern_match_values
										  >
	using nik_safe(PREFIX, s_<<<MODULE>>>_value)				= typename <<<SIGNATURE>>>::<<<DIVISION>>>::template
										  s_<<<MODULE>>>_value
											<Value, Continuation, Kind, ListKind>;

//

	static constexpr void (*nik_safe(PREFIX, p_<<<MODULE>>>_display))(<<<TYPE>>>) =
		<<<SIGNATURE>>>::<<<DIVISION>>>::p_<<<MODULE>>>_display;

//

#undef PREFIX<<<UNDEF_DEPENDENCIES_TEXT>>>
