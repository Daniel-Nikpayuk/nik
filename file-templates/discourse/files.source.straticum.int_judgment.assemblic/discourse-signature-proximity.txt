<<<DEFINE_DEPENDENCIES_TEXT>>>#ifdef safe_name

	#define PREFIX		<<<DIV_SIGNATURE>>>_

#else

	#define PREFIX

#endif

//

										  template
										  <
											<<<TYPE>>> Value1,
											<<<TYPE>>> Value2,

											typename Continuation =
											typename pnk_builtin_ss::inductor::
											ch_symbolic_values
										  >
	using nik_safe(PREFIX, s_<<<MODULE>>>_less_than)		= typename <<<SIGNATURE>>>::<<<DIVISION>>>::template
										  s_<<<MODULE>>>_less_than
											<Value1, Value2, Continuation>;

										  template
										  <
											<<<TYPE>>> Value1,
											<<<TYPE>>> Value2,

											typename Continuation =
											typename pnk_builtin_ss::inductor::
											ch_symbolic_values
										  >
	using nik_safe(PREFIX, s_<<<MODULE>>>_less_than_or_equal)	= typename <<<SIGNATURE>>>::<<<DIVISION>>>::template
										  s_<<<MODULE>>>_less_than_or_equal
											<Value1, Value2, Continuation>;

										  template
										  <
											<<<TYPE>>> Value1,
											<<<TYPE>>> Value2,

											typename Continuation =
											typename pnk_builtin_ss::inductor::
											ch_symbolic_values
										  >
	using nik_safe(PREFIX, s_<<<MODULE>>>_greater_than)		= typename <<<SIGNATURE>>>::<<<DIVISION>>>::template
										  s_<<<MODULE>>>_greater_than
											<Value1, Value2, Continuation>;

										  template
										  <
											<<<TYPE>>> Value1,
											<<<TYPE>>> Value2,

											typename Continuation =
											typename pnk_builtin_ss::inductor::
											ch_symbolic_values
										  >
	using nik_safe(PREFIX, s_<<<MODULE>>>_greater_than_or_equal)	= typename <<<SIGNATURE>>>::<<<DIVISION>>>::template
										  s_<<<MODULE>>>_greater_than_or_equal
											<Value1, Value2, Continuation>;

//

	static constexpr bool (*nik_safe(PREFIX, p_<<<MODULE>>>_less_than))(<<<TYPE>>>, <<<TYPE>>>) =
		<<<SIGNATURE>>>::<<<DIVISION>>>::p_<<<MODULE>>>_less_than;

	static constexpr bool (*nik_safe(PREFIX, p_<<<MODULE>>>_less_than_or_equal))(<<<TYPE>>>, <<<TYPE>>>) =
		<<<SIGNATURE>>>::<<<DIVISION>>>::p_<<<MODULE>>>_less_than_or_equal;

	static constexpr bool (*nik_safe(PREFIX, p_<<<MODULE>>>_greater_than))(<<<TYPE>>>, <<<TYPE>>>) =
		<<<SIGNATURE>>>::<<<DIVISION>>>::p_<<<MODULE>>>_greater_than;

	static constexpr bool (*nik_safe(PREFIX, p_<<<MODULE>>>_greater_than_or_equal))(<<<TYPE>>>, <<<TYPE>>>) =
		<<<SIGNATURE>>>::<<<DIVISION>>>::p_<<<MODULE>>>_greater_than_or_equal;

//

#undef PREFIX<<<UNDEF_DEPENDENCIES_TEXT>>>
