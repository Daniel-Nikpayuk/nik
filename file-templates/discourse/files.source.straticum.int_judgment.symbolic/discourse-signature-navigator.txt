<<<DEFINE_DEPENDENCIES_TEXT>>>#ifdef safe_name

	#define PREFIX		<<<DIV_SIGNATURE>>>_

#else

	#define PREFIX

#endif

//

											  template
											  <
												typename Value1,
												typename Value2,

												typename Continuation = nik::ch_s_values,
												typename Kind = <<<TYPE>>>,

												template<Kind...> class ListKind =
												pnk_builtin_ss::inductor::template
												dependent_memoization<Kind>::template
												pattern_match_values
											  >
	using nik_safe(PREFIX, s_<<<MODULE>>>_add)				= typename <<<SIGNATURE>>>::<<<DIVISION>>>::template
											  s_<<<MODULE>>>_add
											<Value1, Value2, Continuation, Kind, ListKind>;

											  template
											  <
												typename Value1,
												typename Value2,

												typename Continuation = nik::ch_s_values,
												typename Kind = <<<TYPE>>>
											  >
	using nik_safe(PREFIX, s_<<<MODULE>>>_add)				= typename <<<SIGNATURE>>>::<<<DIVISION>>>::template
											  s_<<<MODULE>>>_add
											<Value1, Value2, Continuation, Kind, ListKind>;

//

//

#undef PREFIX<<<UNDEF_DEPENDENCIES_TEXT>>>
