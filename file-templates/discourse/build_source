#!/bin/bash

get-text()
{
	local FILE_NAME="$1"
	local DIVISION="$2"
	local MODULE_DIR="$3"
	local SOURCE_DIR="$4"

	local TEXT_FILE=""

	if [ -f "$MODULE_DIR/$FILE_NAME-$DIVISION.txt" ]
	then
		TEXT_FILE="$MODULE_DIR/$FILE_NAME-$DIVISION.txt"

	elif [ -f "$MODULE_DIR/$FILE_NAME.txt" ]
	then
		TEXT_FILE="$MODULE_DIR/$FILE_NAME.txt"

	elif [ -f "$SOURCE_DIR/$FILE_NAME-$DIVISION.txt" ]
	then
		TEXT_FILE="$SOURCE_DIR/$FILE_NAME-$DIVISION.txt"
	else
		TEXT_FILE="$SOURCE_DIR/$FILE_NAME.txt"
	fi

	cat "$TEXT_FILE"
}

build-source ()
{
	local LIBRARY="$1"
	local UNIVERSE="$2"
	local LANGUAGE="$3"
	local MODULE="$4"
	local DIVISION="$5"
	local READING="$6"
	local PERMISSION="$7"
#
	local SOURCE_DIR="files.source"
	local MODULE_DIR="$SOURCE_DIR$(if [ -n "$8" ]; then echo ".$8"; else echo ""; fi)"
#
	local SIZE_TYPE_TEXT=""
	local DISCOURSE_TEXT=""
	local BODY_TEXT=""

	local DEFINE_DEPENDENCIES_TEXT=""
	local SYMBOLIC_TEXT=""
	local ASSEMBLIC_TEXT=""
	local PROCEDURAL_TEXT=""
	local UNDEF_DEPENDENCIES_TEXT=""
#
	SIZE_TYPE_TEXT="$(get-text "size_type" "$DIVISION" "$MODULE_DIR" "$SOURCE_DIR")"

	local DISCOURSE_NAME=""
	local BODY_NAME=""

	if [ "$DIVISION" = "alias" ]
	then
		DISCOURSE_NAME="alias"
	else
		DISCOURSE_NAME="signature"

		DEFINE_DEPENDENCIES_TEXT="$(get-text "define-dependencies" "$DIVISION" "$MODULE_DIR" "$SOURCE_DIR")\n\n"

		if [ "$DIVISION" = "inductor" ]
		then
			BODY_NAME="inductor"
		else
			BODY_NAME="sap"

			SYMBOLIC_TEXT="$(get-text "symbolic" "$DIVISION" "$MODULE_DIR" "$SOURCE_DIR")"
			ASSEMBLIC_TEXT="$(get-text "assemblic" "$DIVISION" "$MODULE_DIR" "$SOURCE_DIR")"

			if [ "$READING" = "assemblic" ]
			then
				PROCEDURAL_TEXT="\n\n//\n\n$(get-text "procedural" "$DIVISION" "$MODULE_DIR" "$SOURCE_DIR")"
			fi
		fi

		UNDEF_DEPENDENCIES_TEXT="\n\n$(get-text "undef-dependencies" "$DIVISION" "$MODULE_DIR" "$SOURCE_DIR")"

		BODY_TEXT="$(get-text "body-$BODY_NAME" "$DIVISION" "$MODULE_DIR" "$SOURCE_DIR")"
	fi

	DISCOURSE_TEXT="$(get-text "discourse-$DISCOURSE_NAME" "$DIVISION" "$MODULE_DIR" "$SOURCE_DIR")"
#
	local mawk_prog='
	{
		gsub("<<<DISCOURSE_TEXT>>>", DISCOURSE_TEXT);
		gsub("<<<BODY_TEXT>>>", BODY_TEXT);

		gsub("<<<DEFINE_DEPENDENCIES_TEXT>>>", DEFINE_DEPENDENCIES_TEXT);
		gsub("<<<SYMBOLIC_TEXT>>>", SYMBOLIC_TEXT);
		gsub("<<<ASSEMBLIC_TEXT>>>", ASSEMBLIC_TEXT);
		gsub("<<<PROCEDURAL_TEXT>>>", PROCEDURAL_TEXT);
		gsub("<<<UNDEF_DEPENDENCIES_TEXT>>>", UNDEF_DEPENDENCIES_TEXT);

		print $0;
	}'

	echo "$SIZE_TYPE_TEXT"							|
	mawk									\
		-v DISCOURSE_TEXT="$DISCOURSE_TEXT"				\
		-v BODY_TEXT="$BODY_TEXT"					\
		-v DEFINE_DEPENDENCIES_TEXT="$DEFINE_DEPENDENCIES_TEXT"		\
		-v SYMBOLIC_TEXT="$SYMBOLIC_TEXT"				\
		-v ASSEMBLIC_TEXT="$ASSEMBLIC_TEXT"				\
		-v PROCEDURAL_TEXT="$PROCEDURAL_TEXT"				\
		-v UNDEF_DEPENDENCIES_TEXT="$UNDEF_DEPENDENCIES_TEXT"		\
										\
	"$mawk_prog"
}

build-source "$1" "$2" "$3" "$4" "$5" "$6" "$7" "$8"

