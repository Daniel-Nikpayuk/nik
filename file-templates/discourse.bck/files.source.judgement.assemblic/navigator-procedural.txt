												  template<typename Type>
	static constexpr Type (*nik_safe(PREFIX, p_<<<U_TYPE>>>_add))(Type, Type)		= <<<SIGNATURE>>>::<<<DIVISION>>>::
												  p_<<<MODULE>>>_add<TYPE>;

												  template<typename Type>
	static constexpr Type (*nik_safe(PREFIX, p_<<<U_TYPE>>>_multiply))(Type, Type)		= <<<SIGNATURE>>>::<<<DIVISION>>>::
												  p_<<<MODULE>>>_multiply<TYPE>;

												  template<typename Type>
	static constexpr Type (*nik_safe(PREFIX, p_<<<U_TYPE>>>_subtract))(Type, Type)		= <<<SIGNATURE>>>::<<<DIVISION>>>::
												  p_<<<MODULE>>>_subtract<TYPE>;

												  template<typename Type>
	static constexpr Type (*nik_safe(PREFIX, p_<<<U_TYPE>>>_divide))(Type, Type)		= <<<SIGNATURE>>>::<<<DIVISION>>>::
												  p_<<<MODULE>>>_divide<TYPE>;

												  template<typename Type>
	static constexpr Type (*nik_safe(PREFIX, p_<<<U_TYPE>>>_modulo))(Type, Type)		= <<<SIGNATURE>>>::<<<DIVISION>>>::
												  p_<<<MODULE>>>_modulo<TYPE>;
